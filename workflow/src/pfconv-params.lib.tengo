ll := import("@platforma-sdk/workflow-tengo:ll")
utils := import(":utils")
text := import("text")

getColumns := func(blockId, featureParams) {
	assemblingFeature := featureParams.assemblingFeature
	imputed := featureParams.imputed
	cellTags := featureParams.cellTags
	generateKey := featureParams.generateKey
	clonotypeKeyAxes := featureParams.clonotypeKeyAxes
	featureSpec := utils.getProductiveFeature(assemblingFeature, imputed)
	productiveFeature := featureSpec.productiveFeature
	mutationVFeature := featureSpec.mutationVFeature
	addColumns := true
	if assemblingFeature == "CDR3" {
		addColumns = false
	}

	cols := {
		axes: [
			{
				column: "cloneId",
				spec: {
					name: "pl7.app/vdj/cloneId",
					type: "Long",
					domain: {
						"pl7.app/blockId": blockId
					},
					annotations: {
						"pl7.app/min": "0",
						"pl7.app/label": "Clone id",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "90000"
					}
				}
			}
			],
		columns: [

			],
		storageFormat: "Binary",
		partitionKeyLength: 0
	}
	if addColumns {
		featureColumns := [{
			column: "nSeq" + assemblingFeature,
			id: "n-seq-" + assemblingFeature,
			naRegex: "region_not_covered",
			spec: {
				valueType: "String",
				name: "pl7.app/vdj/sequence",
				domain: {
					"pl7.app/vdj/feature": assemblingFeature,
					"pl7.app/alphabet": "nucleotide"
				},
				annotations: {
					"pl7.app/vdj/imputed": "false",
					"pl7.app/label": assemblingFeature + " nt",
					"pl7.app/table/visibility": "default",
					"pl7.app/table/orderPriority": "11000"
				}
			}
		},
			{
				column: "aaSeq" + assemblingFeature,
				id: "aa-seq-" + assemblingFeature,
				naRegex: "region_not_covered",
				spec: {
					valueType: "String",
					name: "pl7.app/vdj/sequence",
					domain: {
						"pl7.app/vdj/feature": assemblingFeature,
						"pl7.app/alphabet": "aminoacid"
					},
					annotations: {
						"pl7.app/vdj/imputed": "false",
						"pl7.app/label": assemblingFeature + " aa",
						"pl7.app/table/visibility": "default",
						"pl7.app/table/orderPriority": "10500"
					}
				}
			}]
		featureColumnsImputed := [{
			column: "nSeqImputed" + assemblingFeature,
			id: "n-seq-imputed-" + assemblingFeature,
			naRegex: "",
			spec: {
				name: "pl7.app/vdj/sequence",
				valueType: "String",
				domain: {
					"pl7.app/vdj/feature": assemblingFeature,
					"pl7.app/alphabet": "nucleotide"
				},
				annotations: {
					"pl7.app/vdj/imputed": "true",
					"pl7.app/label": assemblingFeature + " imputed nt",
					"pl7.app/table/visibility": "default",
					"pl7.app/table/orderPriority": "4000"
				}
			}
		},
			{
				column: "aaSeqImputed" + assemblingFeature,
				id: "aa-seq-imputed-" + assemblingFeature,
				naRegex: "",
				spec: {
					valueType: "String",
					name: "pl7.app/vdj/sequence",
					domain: {
						"pl7.app/vdj/feature": assemblingFeature,
						"pl7.app/alphabet": "aminoacid"
					},
					annotations: {
						"pl7.app/vdj/imputed": "true",
						"pl7.app/label": assemblingFeature + " imputed aa",
						"pl7.app/table/visibility": "default",
						"pl7.app/table/orderPriority": "3500"
					}
				}
			}]
		mutationColumns := [{
			column: "nMutations" + mutationVFeature,
			id: "n-mutations-" + assemblingFeature,
			allowNA: true,
			naRegex: "None",
			spec: {
				valueType: "String",
				name: "pl7.app/vdj/sequence/nMutations",
				annotations: {
					"pl7.app/label": "Nt mutations in V gene",
					"pl7.app/table/visibility": "optional",
					"pl7.app/table/orderPriority": "50"
				}
			}
		},
			{
				column: "aaMutations" + mutationVFeature,
				id: "aa-mutations-" + assemblingFeature,
				allowNA: true,
				naRegex: "None",
				spec: {
					valueType: "String",
					name: "pl7.app/vdj/sequence/aaMutations",
					annotations: {
						"pl7.app/label": "AA mutations in V gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "60"
					}
				}
			},
			{
				column: "nMutationsFR4",
				id: "n-mutations-FR4",
				allowNA: true,
				naRegex: "None",
				spec: {
					valueType: "String",
					name: "pl7.app/vdj/sequence/nMutations",
					annotations: {
						"pl7.app/label": "Nt mutations in J gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "30"
					}
				}
			},
			{
				column: "aaMutationsFR4",
				id: "aa-mutations-FR4",
				allowNA: true,
				naRegex: "None",
				spec: {
					valueType: "String",
					name: "pl7.app/vdj/sequence/aaMutations",
					annotations: {
						"pl7.app/label": "AA mutations in J gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "40"
					}
				}
			},
			{
				column: "nMutationsCount" + mutationVFeature,
				id: "n-mutations-count-" + assemblingFeature,
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Int",
					name: "pl7.app/vdj/sequence/nMutationsCount",
					annotations: {
						"pl7.app/label": "Nt mutations count in V gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "70"
					}
				}
			},
			{
				column: "aaMutationsCount" + mutationVFeature,
				id: "aa-mutations-count-" + assemblingFeature,
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Int",
					name: "pl7.app/vdj/sequence/aaMutationsCount",
					annotations: {
						"pl7.app/label": "AA mutations count in V gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "80"
					}
				}
			},
			{
				column: "nMutationsRate" + mutationVFeature,
				id: "n-mutations-rate-" + assemblingFeature,
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Double",
					name: "pl7.app/vdj/sequence/nMutationsRate",
					annotations: {
						"pl7.app/label": "Nt mutations rate in V gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "90"
					}
				}
			},
			{
				column: "aaMutationsRate" + mutationVFeature,
				id: "aa-mutations-rate-" + assemblingFeature,
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Double",
					name: "pl7.app/vdj/sequence/aaMutationsRate",
					annotations: {
						"pl7.app/label": "AA mutations rate in V gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "100"
					}
				}
			}, {
				column: "nMutationsCountFR4",
				id: "n-mutations-count-fr4",
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Int",
					name: "pl7.app/vdj/sequence/nMutationsCount",
					annotations: {
						"pl7.app/label": "Nt mutations count in J gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "60"
					}
				}
			},
			{
				column: "aaMutationsCountFR4",
				id: "aa-mutations-count-fr4",
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Int",
					name: "pl7.app/vdj/sequence/aaMutationsCount",
					annotations: {
						"pl7.app/label": "AA mutations count in J gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "50"
					}
				}
			},
			{
				column: "nMutationsRateFR4",
				id: "n-mutations-rate-fr4",
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Double",
					name: "pl7.app/vdj/sequence/nMutationsRate",
					annotations: {
						"pl7.app/label": "Nt mutations rate in J gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "40"
					}
				}
			},
			{
				column: "aaMutationsRateFR4",
				id: "aa-mutations-rate-fr4",
				allowNA: true,
				naRegex: "region_not_covered",
				spec: {
					valueType: "Double",
					name: "pl7.app/vdj/sequence/aaMutationsRate",
					annotations: {
						"pl7.app/label": "AA mutations rate in J gene",
						"pl7.app/table/visibility": "optional",
						"pl7.app/table/orderPriority": "30"
					}
				}
			}]
		if imputed {
			cols.columns = cols.columns + featureColumns + featureColumnsImputed
		} else {
			cols.columns = cols.columns + featureColumns + mutationColumns
		}
	}

	cellTagsList := []
	label := undefined
	priority := 100000
	if len(cellTags) > 0 {
		for tag in cellTags {
			if tag == "CELL" {
				label = "Cell tag"
			} else {
				label = text.to_title(tag[:4]) + " " + text.to_lower(tag[4:])
			}
			cols.axes += [
				{
					column: "tagValue" + tag,
					naRegex: "",
					spec: {
						name: "pl7.app/vdj/tagValueCELL",
						type: "String",
						domain: {
							"pl7.app/blockId": blockId
						},
						annotations: {
							"pl7.app/label": label,
							"pl7.app/table/visibility": "default",
							"pl7.app/table/orderPriority": string(priority)
						}
					}
				}
				]
			priority -= 1
		}
	}
	if generateKey {
		cols["axes"] = [
		{
			column: text.join(clonotypeKeyAxes, "-"),
			naRegex: "",
			spec: {
				name: "pl7.app/vdj/clonotypeKey",
				type: "String",
				domain: {
					"pl7.app/vdj/clonotypeKey/structure": text.join(clonotypeKeyAxes, "-")
				},
				annotations: {
					"pl7.app/label": "Clone key",
					"pl7.app/table/visibility": "optional",
					"pl7.app/table/orderPriority": "110000"
				}
			}
		}
	]}

	return cols
}

export ll.toStrict({
	getColumns: getColumns
})
